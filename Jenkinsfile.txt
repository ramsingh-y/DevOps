pipeline{ 
     agent any 
    tools { 
         maven 'Maven_3.6.3' 
     } 
     stages { 
          stage('Initialize') { 
             steps { 
                 echo "PATH = ${PATH}" 
                 echo "M2_HOME = ${M2_HOME}" 
             } 
         } 
		  stage('Checkout') { 
             steps { 
                 checkout([$class: 'GitSCM', branches: [[name: 'main']], extensions: [[$class: 'CheckoutOption', timeout: 5], [$class: 'CloneOption', noTags: false, reference: '', shallow: false, timeout: 5]], userRemoteConfigs: [[url: 'https://github.com/ramsingh-y/DevOps.git']]]) 
                  echo 'Checkout source code from git' 
             } 
         } 
		 stage('Parallel Run') { 
		 parallel {
				stage('Unit Test') { 
					steps {
						echo 'Junit test in progress'
                        sh "mvn clean test"
					} 
				}		 
				stage('Quality Check') { 
					steps {
						echo "job ${jobName}"
						echo 'QualityCheck - Done'
					} 
				}
		    stage('Security Check') { 
             steps { 
                 dependencyCheck additionalArguments: '--scan=. --format=HTML', odcInstallation: 'OWASP-Dependency-Check' 
                 echo 'All security checks done' 
             } 
         }
		 
		 }
		 }
         stage('Build Push App') { 
             steps { 
                 sh "mvn clean install" 
             } 
         }    
         stage('Kill previous deploy ment') { 
             steps { 
                 catchError(buildResult: 'SUCCESS', stageResult: 'SUCCESS') { 
                     sh "fuser -k 8083/tcp" 
                 } 
             } 
         } 
         stage('Deploy') { 
             steps { 
                 sh "JENKINS_NODE_COOKIE=dontKillMe nohup java -jar ./target/spring-boot-rest-2-0.0.1-SNAPSHOT.jar &" 
                 echo 'Deployment done' 
             } 
         } 
         stage('Post Deployment Check') { 
             steps { 
				sh "/usr/local/bin/newman run DevOpsTraining.postman_collection.json -r html,cli"
                 echo 'All deployment check done' 				
			 } 
         }
		stage('Notification') { 
             steps {
				echo 'Send Test Results Email and Teams Notificataion' 
				emailext attachLog: true, body: 'Hello', subject: 'Test Results', to: 'ram.s.yadav@fisglobal.com'
			}
			} 
     } 
 }
